
class is_subgroup [group α] (s : set α) : Prop := 
    (one_closed : (1 : α) ∈ s)
    (inv_closed : ∀ {a}, a ∈ s → a⁻¹ ∈ s) 
    (mul_closed : ∀ {a b}, a ∈ s → b ∈ s → a * b ∈ s) 

namespace is_subgroup
variables [group α] [group β]
variables {s : set α} [is_subgroup s]

instance trivial : is_subgroup ({1} : set α)

instance image {f : α → β} (hf: is_hom f) : is_subgroup (f '' s) 

instance preimage {f : β → α} (hf : is_hom f) : is_subgroup (f ⁻¹' s) 

def kernel {f : α → β} (hf: is_hom f) : set α := {a | f a = 1}

instance kernel_subg {f : α → β} (hf: is_hom f) : is_subgroup (kernel hf)

def left_coset  (a : α) (s : set α) [is_subgroup s] : set α := {b | ∃ (g : s), b = a * g}
def right_coset (s : set α) [is_subgroup s] (a : α) : set α := {b | ∃ (g : s), b = g * a}

lemma kernel_iff_equiv {f : α → β} (hf: is_hom f) (a b : α) : f b = f a ↔ a⁻¹ * b ∈ kernel hf

theorem inj_iff_trivial_kernel {f : α → β} (hf: is_hom f) : 
    function.injective f ↔ kernel hf = {1}

class is_normal_subgroup (s : set α) : Prop :=
    (is_subgroup : is_subgroup s)
    (normal : ∀ n ∈ s, ∀ g : α, g * n * g⁻¹ ∈ s)

instance kernel_normal {f : α → β} (hf: is_hom f) : is_normal_subgroup (kernel hf)

def center (α : Type u) [group α] : set α := {z | ∀ g, g * z = z * g}

instance center_subg : is_subgroup (center α) 

instance center_normal : is_normal_subgroup (center α) 

theorem normal_iff_eq_cosets (s : set α) [hs : is_subgroup s] : 
    is_normal_subgroup s ↔ ∀ g, left_coset g s = right_coset s g